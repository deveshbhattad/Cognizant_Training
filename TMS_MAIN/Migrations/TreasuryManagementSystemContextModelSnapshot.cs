// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMS_MAIN.Data;

#nullable disable

namespace TMS_MAIN.Migrations
{
    [DbContext(typeof(TreasuryManagementSystemContext))]
    partial class TreasuryManagementSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TMS_MAIN.Models.BankAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccountNumber = "1234567890",
                            AccountType = 0,
                            Balance = 50000.00m,
                            BankName = "Chase Bank",
                            UserId = 2
                        },
                        new
                        {
                            AccountId = 2,
                            AccountNumber = "2345678901",
                            AccountType = 1,
                            Balance = 15000.00m,
                            BankName = "Bank of America",
                            UserId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            AccountNumber = "3456789012",
                            AccountType = 0,
                            Balance = 12000.00m,
                            BankName = "Wells Fargo",
                            UserId = 1
                        },
                        new
                        {
                            AccountId = 4,
                            AccountNumber = "4567890123",
                            AccountType = 1,
                            Balance = 25000.00m,
                            BankName = "Citibank",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TMS_MAIN.Models.CashFlow", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("CashFlows");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            AccountId = 1,
                            Amount = 50000.00m,
                            Description = "service tax",
                            TransactionDate = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = 2
                        },
                        new
                        {
                            TransactionId = 2,
                            AccountId = 2,
                            Amount = 15000.00m,
                            Description = "Office Supplies",
                            TransactionDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1,
                            UserId = 2
                        },
                        new
                        {
                            TransactionId = 3,
                            AccountId = 3,
                            Amount = 12000.00m,
                            Description = "Project Payment - Alpha",
                            TransactionDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = 1
                        },
                        new
                        {
                            TransactionId = 4,
                            AccountId = 4,
                            Amount = 25000.00m,
                            Description = "Consulting Fee",
                            TransactionDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TMS_MAIN.Models.Compliance", b =>
                {
                    b.Property<int>("ComplianceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplianceId"));

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Submitted");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ComplianceId");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("Compliances");
                });

            modelBuilder.Entity("TMS_MAIN.Models.Investment", b =>
                {
                    b.Property<int>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestmentId"));

                    b.Property<decimal>("AmountInvested")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvestmentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvestmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Investments");

                    b.HasData(
                        new
                        {
                            InvestmentId = 1,
                            AmountInvested = 10000m,
                            CurrentValue = 10500m,
                            InvestmentType = 0,
                            MaturityDate = new DateTime(2026, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            InvestmentId = 2,
                            AmountInvested = 20000m,
                            CurrentValue = 25000m,
                            InvestmentType = 2,
                            MaturityDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("TMS_MAIN.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Generated");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            EndDate = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneratedDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Module = "CashFlow",
                            Parameters = "{\"AccountId\":1}",
                            ReportName = "Quarterly Cash Flow",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Generated",
                            UserId = 2
                        },
                        new
                        {
                            ReportId = 2,
                            EndDate = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneratedDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Module = "Investment",
                            Parameters = "{}",
                            ReportName = "Investment Portfolio",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Viewed",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TMS_MAIN.Models.Risk", b =>
                {
                    b.Property<string>("RiskId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Impact")
                        .HasColumnType("int");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RiskScore")
                        .HasColumnType("float");

                    b.Property<string>("RiskType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RiskId");

                    b.HasIndex("UserId");

                    b.ToTable("RiskAssessments");
                });

            modelBuilder.Entity("TMS_MAIN.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "",
                            Email = "admin@company.com",
                            FullName = "System Administrator",
                            IsAdmin = true,
                            Password = "admin",
                            PhoneNumber = "",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "bnc",
                            Email = "treasurer@company.com",
                            FullName = "Default Treasurer",
                            IsAdmin = false,
                            Password = "treasurer",
                            PhoneNumber = "123456789",
                            Username = "treasurer"
                        },
                        new
                        {
                            UserId = 3,
                            Address = "mysuru",
                            Email = "treasurer1@company.com",
                            FullName = "Default Treasurer",
                            IsAdmin = false,
                            Password = "treasurer",
                            PhoneNumber = "583456789",
                            Username = "treasurer1"
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Bengaluru",
                            Email = "treasurer1@company.com",
                            FullName = "Default Treasurer",
                            IsAdmin = false,
                            Password = "treasurer",
                            PhoneNumber = "583456789",
                            Username = "treasurer2"
                        });
                });

            modelBuilder.Entity("TMS_MAIN.Models.BankAccount", b =>
                {
                    b.HasOne("TMS_MAIN.Models.User", "User")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TMS_MAIN.Models.CashFlow", b =>
                {
                    b.HasOne("TMS_MAIN.Models.BankAccount", "BankAccount")
                        .WithMany("CashFlows")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TMS_MAIN.Models.User", "User")
                        .WithMany("CashFlows")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TMS_MAIN.Models.Compliance", b =>
                {
                    b.HasOne("TMS_MAIN.Models.Report", "Report")
                        .WithMany("Compliances")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TMS_MAIN.Models.User", "User")
                        .WithMany("Compliances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TMS_MAIN.Models.Investment", b =>
                {
                    b.HasOne("TMS_MAIN.Models.User", "User")
                        .WithMany("Investments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TMS_MAIN.Models.Report", b =>
                {
                    b.HasOne("TMS_MAIN.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TMS_MAIN.Models.Risk", b =>
                {
                    b.HasOne("TMS_MAIN.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TMS_MAIN.Models.BankAccount", b =>
                {
                    b.Navigation("CashFlows");
                });

            modelBuilder.Entity("TMS_MAIN.Models.Report", b =>
                {
                    b.Navigation("Compliances");
                });

            modelBuilder.Entity("TMS_MAIN.Models.User", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("CashFlows");

                    b.Navigation("Compliances");

                    b.Navigation("Investments");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
